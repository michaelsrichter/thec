﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Richter_THEC_Model
{
    public partial class DurationByDistance
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"Provider", @"Provider"),new InputOutputColumnPair(@"DayAndHour", @"DayAndHour")})      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Distance", @"Distance"),new InputOutputColumnPair(@"Total", @"Total")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Provider",@"DayAndHour",@"Distance",@"Total"}))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.Regression.Trainers.FastTreeTweedie(new FastTreeTweedieTrainer.Options(){NumberOfLeaves=84,MinimumExampleCountPerLeaf=51,NumberOfTrees=617,MaximumBinCountPerFeature=1024,LearningRate=0.01381747721386F,FeatureFraction=1F,LabelColumnName=@"Duration",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
